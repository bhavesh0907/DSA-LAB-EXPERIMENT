#include <stdio.h>

#define MAX_VERTICES 100

// Define the structure for a graph
struct Graph {
    int vertices;
    int matrix[MAX_VERTICES][MAX_VERTICES];
};

// Function to initialize the graph
void initializeGraph(struct Graph* graph, int vertices) {
    graph->vertices = vertices;

    // Initialize the adjacency matrix with all zeros
    for (int i = 0; i < vertices; i++) {
        for (int j = 0; j < vertices; j++) {
            graph->matrix[i][j] = 0;
        }
    }
}

// Function to add an edge to the graph
void addEdge(struct Graph* graph, int start, int end) {
    // For an undirected graph, set both matrix entries to 1
    graph->matrix[start][end] = 1;
    graph->matrix[end][start] = 1;
}

// Function to display the adjacency matrix of the graph
void displayGraph(struct Graph* graph) {
    printf("Adjacency Matrix:\n");
    for (int i = 0; i < graph->vertices; i++) {
        for (int j = 0; j < graph->vertices; j++) {
            printf("%d ", graph->matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    struct Graph myGraph;
    int numVertices = 5;

    initializeGraph(&myGraph, numVertices);

    // Adding edges to the graph
    addEdge(&myGraph, 0, 1);
    addEdge(&myGraph, 0, 4);
    addEdge(&myGraph, 1, 2);
    addEdge(&myGraph, 1, 3);
    addEdge(&myGraph, 1, 4);
    addEdge(&myGraph, 2, 3);
    addEdge(&myGraph, 3, 4);

    // Displaying the graph
    displayGraph(&myGraph);

    return 0;
}
